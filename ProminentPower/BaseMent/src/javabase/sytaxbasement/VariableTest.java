package javabase.sytaxbasement;

/**
 * Java 局部变量 全局变量
 * 根据定义变量位置的不同，可以将变量分为成员变量和局部变量
 *  *  *        成员变量是在类范围内定义的变量
 *  *  *        局部变量是在一个方法内定义的变量
 *  *  *       成员变量可以分为：
 *  *  *       ----实例属性 （不用static修饰）
 *  *  *               随着实例属性的存在而存在
 *  *  *       ----类属性 （static修饰）
 *  *  *               随着类的存在而存在
 */
 class VariableTest { //不写就是default 只能同包访问    protected 只能同包 以及子类访问

    //初始化过的成员变量
//    public static String  withStatic_name="这是一个成员变量"; //类变量 类属性
//    public String withoutStatic_name="这是一个实例变量"; // 实例变量 随着实例属性的存在而存在
    //没有显式初始化过的成员变量 系统会自动为其初始化一个值
    public static String withStatic_name1;
    public String withoutStatic_name1;

    /**
     * 局部变量可以分为形参 --在整个方法内有效
     * 方法局部变量-----------从定义的这个变量开始到方法结束这一段内有效
     * 代码块局部变量---从定义这个变量开始到代码块结束这一段时间内有效
     */
    private void varible(String name) //形参 整个方法内有效
{
     int age; //从30行开始有效： 方法局部变量
//    System.out.print(age);  局部变量如果不初始化是无法直接输出的
     String school;
}

//访问修饰符不能用于局部变量

    /**成员变量
     * ---类变量 类中方法以外带有static修饰符的变量 存于JVM的
     *    |---类变量也称为静态变量，在类中以static关键字声明，但必须在方法构造方法和语句块之外。
     *    |---无论一个类创建了多少个对象，类只拥有类变量的一份拷贝。
     *    |---静态变量除了被声明为常量外很少使用。常量是指声明为public/private，final和static类型的变量。常量初始化后不可改变。
     *    |---静态变量储存在静态存储区。经常被声明为常量，很少单独使用static声明变量。
     *    |---静态变量在程序开始时创建，在程序结束时销毁。
     *    |---与实例变量具有相似的可见性。但为了对类的使用者可见，大多数静态变量声明为public类型。
     *    |---默认值和实例变量相似。数值型变量默认值是0，布尔型默认值是false，引用类型默认值是null。变量的值可以在声明的时候指定，也可以在构造方法中指定。此外，静态变量还可以在静态语句块中初始化。
     *    |---静态变量可以通过：ClassName.VariableName的方式访问。
     *    |---类变量被声明为public static final类型时，类变量名称一般建议使用大写字母。如果静态变量不是public和final类型，其命名方式与实例变量以及局部变量的命名方式一致。
     * ---实例变量 类中方法以外没有static 修饰的变量 存于JVM的
     *    |---当一个对象被实例化之后，每个实例变量的值就跟着确定；
     *    |---实例变量在对象创建的时候创建，在对象被销毁的时候销毁；
     *    |---实例变量的值应该至少被一个方法、构造方法或者语句块引用，使得外部能够通过这些方式获取实例变量信息；
     *    |---实例变量可以声明在使用前或者使用后；
     *    |---访问修饰符可以修饰实例变量；
     *    |---实例变量对于类中的方法、构造方法或者语句块是可见的。 一般情况下应该把实例变量设为私有。通过使用访问修饰符可以使实例变量对子类可见；
     *    |---实例变量具有默认值。数值型变量的默认值是0，布尔型变量的默认值是false，引用类型变量的默认值是null。变量的值可以在声明时指定，也可以在构造方法中指定；
     *     实例变量可以直接通过变量名访问。但在静态方法以及其他类中，就应该使用完全限定名：ObejectReference.VariableName。
     *
     * 局部变量
     * ---申明在方法，局部方法，形参、语句块中的变量
     * ---局部变量不能有访问修饰符 public、default、private、protected
     * ---局部变量在方法，构造方法，代码块被执行的时候创建 执行完毕后被销毁
     * ---局部变量的作用域在方法中
     * ---局部变量存储于JVM的栈中(被分配在Jvm的栈中)
     * ---*局部变量没有默认值 要使用必须要先初始化
     * @param args
     */
  static void main(String args[]) //缺省 default 同类 同包可访问 子类不能访问
 {
     /**
      * 定义一个局部代码块，代码块局部变量只能在代码块内有效
      */

     int a =0; //局部变量
     {
         /**
          * 定义一个代码块局部变量
          */

     }
     System.out.print(withStatic_name1);
 }
}
